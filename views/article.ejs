<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>文章 | 烟火</title>
    <link rel="shortcut icon" type="image/ico" href="/images/favicon.ico">
    <link rel="stylesheet" href="/stylesheets/article.css">
</head>
<body>
<div id="app">
    <div class="header">
        <div class="header-body clearfix">
            <a class="header-title" href="/">烟火 Blog</a>
            <ul class="header-nav">
                <li><a href="/" target="_self">首页</a></li>
                <li class="active"><a href="/article" target="_self">文章</a></li>
                <li><a href="/demo" target="_self">案例</a></li>
                <li><a href="#" target="_self">留言板</a></li>
            </ul>
        </div>
    </div>
    <div class="body">
        <div class="container clearfix">
            <div class="body-article-list">
                <ul class="article-warp">
                    <li class="list-item">
                        <div class="list-item-warp">
                            <div class="article-header">
                                <h1 class="article-title"><a href="#">你不知道的Css3</a></h1>
                                <div class="clearfix">
                                    <p class="article-overview">
                                        <span class="article-author">作者：</span>
                                        <span class="author-name">烟火</span>
                                    </p>
                                    <p class="article-date">2017.10.15</p>
                                </div>
                            </div>
                            <div class="article-body">
                                <div class="article-body-content">
                                    在前面两篇文章《你不知道的CSS（一）》和《你不知道的CSS（二）》中大致介绍了一些CSS方面比较隐晦的但又很实用的技巧。相信这些技巧会为大家在项目实践中带来一定的帮助，本文作为《你不知道的CSS》系列的第三篇文章，将继续在CSS技巧方面进行探讨，不同于前两篇的是，本文将着重介绍CSS中伪类和伪元素在项目中的应用场景。伪类相信大家最熟悉也是用的最多莫过于:hover, :active, :focus之类的，因为这些在平常的项目中太常用了（然而我目前依然见过还有用js去添加.hover类来变化背景色的同学😴）。而伪元素如:before, :after相信大家也用的烂熟了。 当然对于比较常见的伪类（元素）不在本文的讨论范围类，本文主要介绍一些生僻的但是又非常实用的伪类(元素)。CSS的世界已经变天了，抛开过去，拥抱变化吧~
                                </div>
                            </div>
                            <div class="article-footer">
                                <a href="#" class="article-type">Css3</a>
                            </div>
                        </div>
                    </li>
                    <li class="list-item">
                        <div class="list-item-warp">
                            <div class="article-header">
                                <h1 class="article-title"><a href="#">你不知道的Css3</a></h1>
                                <div class="clearfix">
                                    <p class="article-overview">
                                        <span class="article-author">作者：</span>
                                        <span class="author-name">烟火</span>
                                    </p>
                                    <p class="article-date">2017.10.15</p>
                                </div>
                            </div>
                            <div class="article-body">
                                <div class="article-body-content">
                                    在前面两篇文章《你不知道的CSS（一）》和《你不知道的CSS（二）》中大致介绍了一些CSS方面比较隐晦的但又很实用的技巧。相信这些技巧会为大家在项目实践中带来一定的帮助，本文作为《你不知道的CSS》系列的第三篇文章，将继续在CSS技巧方面进行探讨，不同于前两篇的是，本文将着重介绍CSS中伪类和伪元素在项目中的应用场景。伪类相信大家最熟悉也是用的最多莫过于:hover, :active, :focus之类的，因为这些在平常的项目中太常用了（然而我目前依然见过还有用js去添加.hover类来变化背景色的同学😴）。而伪元素如:before, :after相信大家也用的烂熟了。 当然对于比较常见的伪类（元素）不在本文的讨论范围类，本文主要介绍一些生僻的但是又非常实用的伪类(元素)。CSS的世界已经变天了，抛开过去，拥抱变化吧~
                                </div>
                            </div>
                            <div class="article-footer">
                                <a href="#" class="article-type">Css3</a>
                            </div>
                        </div>
                    </li>
                    <li class="list-item">
                        <div class="list-item-warp">
                            <div class="article-header">
                                <h1 class="article-title"><a href="#">你不知道的Css3</a></h1>
                                <div class="clearfix">
                                    <p class="article-overview">
                                        <span class="article-author">作者：</span>
                                        <span class="author-name">烟火</span>
                                    </p>
                                    <p class="article-date">2017.10.15</p>
                                </div>
                            </div>
                            <div class="article-body">
                                <div class="article-body-content">
                                    在前面两篇文章《你不知道的CSS（一）》和《你不知道的CSS（二）》中大致介绍了一些CSS方面比较隐晦的但又很实用的技巧。相信这些技巧会为大家在项目实践中带来一定的帮助，本文作为《你不知道的CSS》系列的第三篇文章，将继续在CSS技巧方面进行探讨，不同于前两篇的是，本文将着重介绍CSS中伪类和伪元素在项目中的应用场景。伪类相信大家最熟悉也是用的最多莫过于:hover, :active, :focus之类的，因为这些在平常的项目中太常用了（然而我目前依然见过还有用js去添加.hover类来变化背景色的同学😴）。而伪元素如:before, :after相信大家也用的烂熟了。 当然对于比较常见的伪类（元素）不在本文的讨论范围类，本文主要介绍一些生僻的但是又非常实用的伪类(元素)。CSS的世界已经变天了，抛开过去，拥抱变化吧~
                                </div>
                            </div>
                            <div class="article-footer">
                                <a href="#" class="article-type">Css3</a>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="body-classify">
                <div class="classify-title">文章分类</div>
                <ul class="article-classify">
                    <li class="item" >
                        <div>
                            <a href="#">前端</a>
                        </div>
                    </li>
                    <li class="item child-classify" >
                        <a href="#">javascript</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
</body>
</html>